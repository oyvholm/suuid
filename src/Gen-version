#!/bin/sh

#==============================================================================
# Gen-version
# File ID: a0ae4d34-b311-11e6-8b72-279c2a0468a3
#
# Generate version.h
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#==============================================================================

progname=Gen-version

exec_version=0.5.0
exec_date=2018-12-30

tag_prefix="suuid-v$exec_version"
has_git=$(git --version | grep -q "git version" && echo 1 || echo 0)

newdef() {
	echo "#define $1  1" >>version.h
}

if test -d ../.git -a $has_git -eq 1; then
	if git tag | grep -q ^$tag_prefix; then
		numsince=$(
		    git log --format=%h \
		        $tag_prefix.. 2>/dev/null |
		    wc -l |
		    tr -d '\t '
		).
	else
		numsince=''
	fi
	gitsha=$(git rev-parse --short=12 HEAD)
	test -n "$(git diff-index --name-only HEAD)" &&
		gitsha="$gitsha-dirty"
	exec_fullversion="$exec_version+${numsince}git-$gitsha"
	exec_date=$(git log -1 --format=%ci | cut -c -10)
else
	exec_fullversion=$exec_version
fi

cat <<END >version.h
/* Generated by $progname */
#define EXEC_VERSION  "$exec_fullversion"
#define EXEC_DATE  "$exec_date"
END

# FAKE_HOST: Use "fake" as hostname to avoid conflicts with files created by 
# the Perl version.
test -n "$FAKE_HOST" && newdef FAKE_HOST

# GCOV: Compile with coverage code for gcov(1)
test -n "$GCOV" && newdef GCOV

# NDEBUG: Disable assert()
test -n "$NDEBUG" && newdef NDEBUG

# TEST_FUNC: Send non-option arguments to a function for testing. Doesn't break 
# anything, non-option arguments are ignored by the program.
test -n "$TEST_FUNC" && newdef TEST_FUNC

# UNUSED: Compile with unused/unfinished code.
test -n "$UNUSED" && newdef UNUSED

# USE_SQLITE: Compile with SQLite. sqlite3.h uses long long, and gcc 4.8.4 and 
# 4.9.2 (probably all other versions too) abort when using -pedantic because 
# it's not defined by ISO C90. If you still want to use -pedantic with gcc, add 
# -Wno-long-long to CCFLAGS. Clang 3.8.0 on FreeBSD 11.0 works with -pedantic.
test -n "$USE_SQLITE" && newdef USE_SQLITE

# VERIFY_UUID: Run additional checks with external programs on every generated 
# uuid, used for development.
test -n "$VERIFY_UUID" && newdef VERIFY_UUID

exit 0

# vim: set ts=8 sw=8 sts=8 noet fo+=w tw=79 fenc=UTF-8 :
